---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventmesh-backend
  labels:
    app: eventmesh-backend
    app.kubernetes.io/version: "v1.16.0"
    app.kubernetes.io/component: eventmesh-backend
    app.kubernetes.io/name: knative-eventing
spec:
  selector:
    matchLabels:
      app: eventmesh-backend
  template:
    metadata:
      name: eventmesh-backend
      labels:
        app: eventmesh-backend
        app.kubernetes.io/version: "v1.16.0"
        app.kubernetes.io/component: eventmesh-backend
        app.kubernetes.io/name: knative-eventing
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eventmesh-backend
      # To avoid node becoming SPOF, spread our replicas to different nodes and zones.
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: eventmesh-backend
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventmesh-backend
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: controller
          image: gcr.io/knative-releases/knative.dev/backstage-plugins/backends/cmd/eventmesh@sha256:24fae4eb366129cd32185bc3ff42a56e846a48d5dba19e85bcb8f10a35213f9e
          imagePullPolicy: IfNotPresent
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: /dev/termination-log
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
