#!/bin/bash
# SPDX-License-Identifier: GPL-3.0

set -eo pipefail

: "${CPUS:=4}"
: "${MEMORY:="16GiB"}"
: "${DISK_SIZE:="64GiB"}"

# note:
# - minikube starts services that may be available on the Internet. Please ensure that you have a firewall to protect your host from unexpected access. For instance:
# - apiserver listens on TCP *:8443
# - kubelet listens on TCP *:10250 and *:10255
# - kube-scheduler listens on TCP *:10259
# - kube-controller listens on TCP *:10257

# debug: Run minikube start --alsologtostderr -v=4 to debug crashes

# issues:
# - https://github.com/kubernetes/minikube/labels/co%2Fkvm2-driver
# - https://github.com/kubernetes/minikube/labels/co%2Fnone-driver
# - https://github.com/kubernetes/minikube/labels/co%2Fvfkit

# ref:
# - https://minikube.sigs.k8s.io/docs/drivers/none/

if grep -E -q 'vmx|svm' /proc/cpuinfo >/dev/null 2>&1; then
  export DRIVER="kvm2"
  export OPT="--profile=kubevirt --kvm-gpu=false --hidden=true --kvm-network='' --network='' --kvm-qemu-uri=qemu:///system"
else
  export DRIVER="vfkit"
fi

# note: minikube cluster
minikube config set cpus "${CPUS}"
minikube config set memory "${MEMORY}"
minikube config set disk-size "${DISK_SIZE}"
minikube start \
  --driver="${DRIVER}" \
  --container-runtime=containerd \
  --docker-opt=containerd=/var/run/containerd/containerd.sock

# note: metallb
METALLB_IP_PREFIX_RANGE=$(minikube ip | sed -r 's/(.*)./\1/')
cat ~/.minikube/profiles/minikube/config.json \
| jq '.KubernetesConfig.LoadBalancerStartIP="'${METALLB_IP_PREFIX_RANGE}64'"' \
| jq '.KubernetesConfig.LoadBalancerEndIP="'${METALLB_IP_PREFIX_RANGE}127'"' \
> ~/.minikube/profiles/minikube/config.json.tmp && mv -f ~/.minikube/profiles/minikube/config.json.tmp ~/.minikube/profiles/minikube/config.json
minikube addons enable metallb
# minikube addons configure metallb

# note: addons
minikube addons enable gvisor
minikube addons enable headlamp
minikube addons enable metrics-server
minikube addons enable registry
minikube addons enable registry-aliases
minikube addons enable volumesnapshots

# fixme: kubevirt
# if grep -E -q 'vmx|svm' /proc/cpuinfo >/dev/null 2>&1; then
#   minikube config -p kubevirt set memory "${MEMORY}"
#   minikube start -p kubevirt
# fi

# note: post
kubectl -n headlamp create token headlamp
